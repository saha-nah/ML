 import pandas as pd  
import numpy as np 
import matplotlib.pyplot as plt 
from sklearn import tree 
from sklearn.datasets import load_iris 
iris=load_iris() 
iris 
print(iris.feature_names) 
print(iris.target_names)  
#Spilitting the dataset 
removed =[0,50,100] 
new_target = np.delete(iris.target,removed) 
new_data = np.delete(iris.data,removed, axis=0) 
#train classifier 
clf = tree.DecisionTreeClassifier()  
clf=clf.fit(new_data,new_target)  
prediction = clf.predict(iris.data[removed]) 
print("Original Labels",iris.target[removed]) 
print("Labels Predicted",prediction) 
 
import numpy as np 
import pandas as pd 
from sklearn.metrics import confusion_matrix 
from sklearn.model_selection import train_test_split 
from sklearn.tree import DecisionTreeClassifier 
from sklearn.metrics import accuracy_score 
from sklearn.metrics import classification_report 
x=iris.data 
y=iris.target 
from sklearn.model_selection import train_test_split 
x_train,x_test,y_train,y_test=train_test_split(x,y,random_state=0,train_size=0.75) 
from sklearn.tree import DecisionTreeClassifier 
decision = DecisionTreeClassifier(criterion='gini',random_state = 0) 
plt.figure(figsize=(12,8)) 
from sklearn import tree 
tree.plot_tree(decision.fit(x_train, y_train)) 
plt.figure(figsize=(12,8)) 
from sklearn import tree 
tree.plot_tree(decision.fit(x_train, y_train)) 
